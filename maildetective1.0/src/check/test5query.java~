
/*Program to read the already stored database/dataset 
and display the information of parts of the email using rdf model
*/
//import all the classes
package check;
import static com.hp.hpl.jena.query.ReadWrite.READ ;
import static com.hp.hpl.jena.query.ReadWrite.WRITE ;
import com.hp.hpl.jena.query.ReadWrite ;
import com.hp.hpl.jena.query.Dataset ;
import com.hp.hpl.jena.query.Query ;
import com.hp.hpl.jena.query.QueryExecution ;
import com.hp.hpl.jena.query.QueryExecutionFactory ;
import com.hp.hpl.jena.query.QueryFactory ;
import com.hp.hpl.jena.query.QuerySolution ;
import com.hp.hpl.jena.query.ResultSet ;
import com.hp.hpl.jena.tdb.TDBFactory ;
import com.hp.hpl.jena.query.ResultSetFormatter;
    
import com.hp.hpl.jena.rdf.model.Model;

import com.hp.hpl.jena.rdf.model.*;
import com.hp.hpl.jena.vocabulary.*;
import java.util.Iterator;
import java.util.Scanner;
import com.hp.hpl.jena.sparql.sse.SSE ;

import com.hp.hpl.jena.update.* ;
import org.apache.jena.atlas.lib.StrUtils ;
import org.apache.jena.atlas.logging.LogCtl ;
import org.apache.jena.query.text.EntityDefinition ;
import org.apache.jena.query.text.TextDatasetFactory ;
import org.apache.jena.query.text.TextQuery ;
import org.apache.jena.riot.RDFDataMgr ;
import org.apache.lucene.store.Directory ;
import org.apache.lucene.store.RAMDirectory ;
import org.slf4j.Logger ;
import org.slf4j.LoggerFactory ;

import com.hp.hpl.jena.query.* ;
import com.hp.hpl.jena.rdf.model.Model ;
import com.hp.hpl.jena.sparql.util.QueryExecUtils ;
import com.hp.hpl.jena.vocabulary.RDFS ;



public class test5query extends Object {
		public static String[] arr=new String[1];
	    public  void  mai (String s) {
	        //String s;
	        //load the dataset 
	        //String query1; 
	        //query1="hjcooljohny75@gmail.com";
	        //query1 = (String)(subjectentry.getText());
	          //  s="SELECT ?x WHERE { ?y <TO:> '"+query1+"' . ?y <SUB:> ?x} LIMIT 20 ";
	            System.out.println(s);
	        String directory = "EMAILADDRESS" ;
	        Dataset ds = TDBFactory.createDataset(directory) ;
	        ds.begin(ReadWrite.READ) ;
	        Model model = ds.getDefaultModel() ;
	       
	         QueryExecution qExec = QueryExecutionFactory.create(s, ds) ;
	         int i=0;
	         try{
	         ResultSet rs = qExec.execSelect() ;
	       String x=rs.toString();
	   
	      
	
	        while (rs.hasNext()) {
	            QuerySolution qs = rs.next();
	            String rds;
	            if(qs.get("x")!=null)
	            rds = qs.get("x").toString();
	            else rds="hi";
	           // String em = (String)rs.getString();
	            if(rds==null)
	                break;
	            //System.out.println(rds);
	           arr[i] = rds;
	           i++;
	           //for (int i =0; i < arr.length; i++){
	          
	           
	       }
	       } finally
	        {qExec.close() ;
	        ds.commit();
	        ds.end();
	       }
	        //for( i=0;i<31;i++)
	        //	System.out.println(arr[i]);
	        //arr[0]="hi";
	   // return arr;
	         //   try {   
	              //      ResultSetFormatter.out(rs) ;
	               // } finally { qExec.close() ; }
	
	            // Another query - same view of the data.
	           
	    }
}









